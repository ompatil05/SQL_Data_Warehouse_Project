CREATE OR ALTER PROCEDURE silver.load_SERVER 
AS
BEGIN
    DECLARE 
        @Start_time DATETIME, 
        @End_time DATETIME, 
        @Batch_Start_Time DATETIME, 
        @BatchEndTime DATETIME;

    BEGIN TRY
        PRINT '==============================================='
        PRINT 'Loading Silver Layer'
        PRINT '==============================================='

        PRINT '==============================================='
        PRINT 'Loading CRM Tables'
        PRINT '==============================================='

        -- Load crm_cust_info
        SET @Start_time = GETDATE()
        PRINT '>> Truncating Table : silver.crm_cust_info'
        TRUNCATE TABLE silver.crm_cust_info;

        PRINT '>> Inserting Data Into : silver.crm_cust_info'
        INSERT INTO silver.crm_cust_info (
            cst_id,
            cst_key,
            cst_firstname,
            cst_lastname,
            cst_martial_status,
            cst_gndr,
            cst_create_date
        )
        SELECT
            cst_id,
            cst_key,
            TRIM(cst_firstname),
            TRIM(cst_lastname),
            CASE 
                WHEN TRIM(UPPER(cst_martial_status)) = 'S' THEN 'Single'
                WHEN TRIM(UPPER(cst_martial_status)) = 'M' THEN 'Married'
                ELSE 'n/a'
            END,
            CASE 
                WHEN TRIM(UPPER(cst_gndr)) = 'F' THEN 'FEMALE'
                WHEN TRIM(UPPER(cst_gndr)) = 'M' THEN 'MALE'
                ELSE 'n/a'
            END,
            cst_create_date
        FROM (
            SELECT *, ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag
            FROM bronze.crm_cust_info
        ) t
        WHERE flag = 1
          AND cst_id IS NOT NULL
          AND cst_key IS NOT NULL
          AND cst_firstname IS NOT NULL
          AND cst_lastname IS NOT NULL
          AND cst_create_date IS NOT NULL;

        SET @End_time = GETDATE()
        PRINT 'Load Duration :' + CAST(DATEDIFF(SECOND, @Start_time, @End_time) AS VARCHAR) + ' Seconds'

        -- Load crm_prd_info
        SET @Start_time = GETDATE()
        PRINT '>> Truncating Table : silver.crm_prd_info'
        TRUNCATE TABLE silver.crm_prd_info;

        PRINT '>> Inserting Data Into : silver.crm_prd_info'
        INSERT INTO silver.crm_prd_info (
            prd_id,
            cat_id,
            prd_key,
            prd_name,
            prd_cost,
            prd_line,
            prd_start_date,
            prd_end_date
        )
        SELECT 
            prd_id,
            SUBSTRING(prd_key, 1, 5),
            SUBSTRING(prd_key, 7, LEN(prd_key)),
            prd_name,
            ISNULL(prd_cost, 0),
            CASE TRIM(UPPER(prd_line))
                WHEN 'M' THEN 'Mountain'
                WHEN 'R' THEN 'Road'
                WHEN 'S' THEN 'Other Sales'
                WHEN 'T' THEN 'Touring'
                ELSE 'n/a'
            END,
            prd_start_date,
            DATEADD(DAY, -1, LEAD(prd_start_date) OVER (
                PARTITION BY prd_key ORDER BY prd_start_date
            ))
        FROM bronze.crm_prd_info;

        SET @End_time = GETDATE()
        PRINT 'Load Duration :' + CAST(DATEDIFF(SECOND, @Start_time, @End_time) AS VARCHAR) + ' Seconds'

        -- Load crm_sls_details
        SET @Start_time = GETDATE()
        PRINT '>> Truncating Table : silver.crm_sls_details'
        TRUNCATE TABLE silver.crm_sls_details;

        PRINT '>> Inserting Data Into : silver.crm_sls_details'
        INSERT INTO silver.crm_sls_details (
            sls_ord_num,
            sls_prd_key,
            sls_cust_id,
            sls_order_date,
            sls_ship_date,
            sls_due_date,
            sls_sales,
            sls_quantity,
            sls_price
        )
        SELECT 
            sls_ord_num,
            sls_prd_key,
            sls_cust_id,
            CASE WHEN sls_order_date = 0 OR LEN(sls_order_date) != 8 THEN NULL
                 ELSE CAST(CAST(sls_order_date AS VARCHAR) AS DATE)
            END,
            CASE WHEN sls_ship_date = 0 OR LEN(sls_ship_date) != 8 THEN NULL
                 ELSE CAST(CAST(sls_ship_date AS VARCHAR) AS DATE)
            END,
            CASE WHEN sls_due_date = 0 OR LEN(sls_due_date) != 8 THEN NULL
                 ELSE CAST(CAST(sls_due_date AS VARCHAR) AS DATE)
            END,
            CASE 
                WHEN sls_sales IS NULL OR sls_sales <= 0 OR sls_sales != sls_quantity * ABS(sls_price)
                THEN sls_quantity * ABS(sls_price)
                ELSE sls_sales
            END,
            sls_quantity,
            CASE 
                WHEN sls_price IS NULL OR sls_price <= 0 THEN sls_sales / NULLIF(sls_quantity, 0)
                ELSE sls_price 
            END
        FROM bronze.crm_sls_details;

        SET @End_time = GETDATE()
        PRINT 'Load Duration :' + CAST(DATEDIFF(SECOND, @Start_time, @End_time) AS VARCHAR) + ' Seconds'

        -- Load erp_cust_AZ12
        SET @Start_time = GETDATE()
        PRINT '>> Truncating Table : silver.erp_cust_AZ12'
        TRUNCATE TABLE silver.erp_cust_AZ12;

        PRINT '>> Inserting Data Into : silver.erp_cust_AZ12'
        INSERT INTO silver.erp_cust_AZ12 (
            cid,
            birth_date,
            gen
        )
        SELECT 
            CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid, 4, LEN(cid)) ELSE cid END,
            CASE WHEN birth_date > GETDATE() THEN NULL ELSE birth_date END,
            CASE 
                WHEN UPPER(TRIM(gen)) IN ('F', 'FEMALE') THEN 'Female'
                WHEN UPPER(TRIM(gen)) IN ('M', 'MALE') THEN 'Male'
                ELSE 'n/a'
            END
        FROM bronze.erp_cust_AZ12;

        SET @End_time = GETDATE()
        PRINT 'Load Duration :' + CAST(DATEDIFF(SECOND, @Start_time, @End_time) AS VARCHAR) + ' Seconds'

        -- Load erp_loc_A101
        SET @Start_time = GETDATE()
        PRINT '>> Truncating Table : silver.erp_loc_A101'
        TRUNCATE TABLE silver.erp_loc_A101;

        PRINT '>> Inserting Data Into : silver.erp_loc_A101'
        INSERT INTO silver.erp_loc_A101 (
            cid,
            country
        )
        SELECT 
            REPLACE(cid, '-', ''),
            CASE 
                WHEN TRIM(country) = 'DE' THEN 'Germany'
                WHEN TRIM(country) IN ('US', 'USA') THEN 'United States'
                WHEN TRIM(country) = '' OR country IS NULL THEN 'n/a'
                ELSE country
            END
        FROM bronze.erp_loc_A101;

        SET @End_time = GETDATE()
        PRINT 'Load Duration :' + CAST(DATEDIFF(SECOND, @Start_time, @End_time) AS VARCHAR) + ' Seconds'

        -- Load erp_px_cat_G1V2
        SET @Start_time = GETDATE()
        PRINT '>> Truncating Table : silver.erp_px_cat_G1V2'
        TRUNCATE TABLE silver.erp_px_cat_G1V2;

        PRINT '>> Inserting Data Into : silver.erp_px_cat_G1V2'
        INSERT INTO silver.erp_px_cat_G1V2 (
            id,
            cat,
            subcat,
            maintenance
        )
        SELECT 
            id,
            cat,
            subcat,
            maintenance
        FROM bronze.erp_px_cat_G1V2;

        SET @End_time = GETDATE()
        PRINT 'Load Duration :' + CAST(DATEDIFF(SECOND, @Start_time, @End_time) AS VARCHAR) + ' Seconds'

    END TRY

    BEGIN CATCH
        PRINT '====================================================='
        PRINT 'ERROR: ' + ERROR_MESSAGE()
        PRINT '====================================================='
    END CATCH
END;
GO


-- Execute the procedure
EXEC silver.load_SERVER;

